<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdp.portal.app.facade.menu.mapper.MenuMgmtUserMapper">


    <select id="selectAll" resultType="com.cdp.portal.app.facade.menu.dto.response.MenuMgmtResDto$MenuMgmt">
        SELECT ROW_NUMBER() OVER (ORDER BY Z.ORD_SEQ ASC) AS ROWNUM
             , Z.*
          FROM (
                SELECT USM.MENU_ID
                     , USM.UP_MENU_ID
                     , USM.MENU_NM
                     , USM.MENU_URL
                     , USM.MENU_DSC
                     , USM2.MENU_NM AS UP_MENU_NM
                     , USM.ORD_SEQ
                     , USM.MENU_SE
                     , USM.MENU_ATTR
                     , USM.USE_YN
                     , USM.MENU_ICON
                  FROM T_USER_SYS_MENU USM
                       LEFT JOIN T_USER_SYS_MENU USM2
                            ON USM.UP_MENU_ID = USM2.MENU_ID
                 <include refid="selectWhere"/>
               ) Z
    </select>

    <sql id="selectWhere">
        <where>
            <if test="search.menuNm != null and search.menuNm != ''">
                AND MENU_NM LIKE '%' || #{search.menuNm} || '%'
            </if>
        </where>
    </sql>

    <insert id="insert" parameterType="MenuModel">
        INSERT INTO T_USER_SYS_MENU(
               MENU_ID
             , UP_MENU_ID
             , MENU_NM
             , MENU_URL
             , MENU_DSC
             , ORD_SEQ
             , MENU_SE
             , MENU_ATTR
             , USE_YN
             , MENU_ICON
             , RGST_ID
             , RGST_DT
             , MODI_ID
             , MODI_DT
        ) VALUES (
               #{menuId}
             , #{upMenuId}
             , #{menuNm}
             , #{menuUrl}
             , #{menuDsc}
             , #{ordSeq}
             , #{menuSe}
             , #{menuAttr}
             , #{useYn}
             , #{menuIcon}
             , #{rgstId}
             , now()
             , #{modiId}
             , now()
        )
    </insert>

    <update id="update" parameterType="MenuModel">
        UPDATE T_USER_SYS_MENU
           SET MENU_ID = #{menuId}
             , UP_MENU_ID = #{upMenuId}
             , MENU_NM = #{menuNm}
             , MENU_URL = #{menuUrl}
             , MENU_DSC = #{menuDsc}
             , ORD_SEQ = #{ordSeq}
             , MENU_SE = #{menuSe}
             , MENU_ATTR = #{menuAttr}
             , USE_YN = #{useYn}
             , MENU_ICON = #{menuIcon}
             , MODI_ID = #{modiId}
             , MODI_DT = now()
         WHERE MENU_ID = #{menuId}
    </update>

    <delete id="delete" parameterType="String">
        DELETE FROM T_USER_SYS_MENU
         WHERE MENU_ID = #{menuId}
    </delete>

    <select id="isExistsByMenuId" resultType="Boolean">
        SELECT EXISTS
             (
                SELECT 1
                FROM
                    T_USER_SYS_MENU
                WHERE
                    MENU_ID = #{menuId}
                LIMIT 1
             )
    </select>

    <select id="selectByAuthIdUserMenus" resultType="com.cdp.portal.app.facade.menu.dto.response.MenuMgmtResDto$MenuMgmt">
        WITH RECURSIVE TEMP_T_USER_SYS_MENU (
                 MENU_NM
               , CONNECT_BY_ROOT
               , MENU_ID
               , UP_MENU_ID
               , ORD_SEQ
               , MENU_URL
               , MENU_DSC
               , AUTH_ID
               , LEVEL
               , PATH
               , CYCLE
               ) AS (
                     SELECT MENU_NM
                          , USM.MENU_ID AS CONNECT_BY_ROOT
                          , USM.MENU_ID
                          , USM.UP_MENU_ID
                          , USM.ORD_SEQ
                          , USM.MENU_URL
                          , USM.MENU_DSC
                          , USMA.AUTH_ID
                          , 1 AS level
                          , ARRAY[USM.MENU_ID::TEXT]
                          , FALSE
                       FROM T_USER_SYS_MENU USM
                            INNER JOIN T_USER_SYS_MENU_AUTH USMA
                                ON USM.MENU_ID = USMA.MENU_ID
                                AND USMA.AUTH_ID = #{search.authId}
                      WHERE UP_MENU_ID IS NULL
                      UNION ALL
                     SELECT USM.MENU_NM
                          , CONNECT_BY_ROOT
                          , USM.MENU_ID
                          , USM.UP_MENU_ID
                          , USM.ORD_SEQ
                          , USM.MENU_URL
                          , USM.MENU_DSC
                          , USMA.AUTH_ID
                          , LEVEL + 1
                          , PATH||USM.MENU_ID
                          , USM.MENU_ID = ANY(PATH)
                       FROM T_USER_SYS_MENU USM
                            INNER JOIN TEMP_T_USER_SYS_MENU TTUSM
                                ON TTUSM.MENU_ID = USM.UP_MENU_ID
                            INNER JOIN T_USER_SYS_MENU_AUTH USMA
                                ON USM.MENU_ID = USMA.MENU_ID
                                AND USMA.AUTH_ID = #{search.authId}
                                AND NOT CYCLE
                    )
                     SELECT LPAD(' ', 4*(LEVEL-1)) || TUSM.MENU_NM AS PADDED_MENU_NM
                          , TUSM.MENU_NM
                          , CONNECT_BY_ROOT
                          , TUSM.MENU_ID
                          , TUSM.UP_MENU_ID
                          , USM2.MENU_NM AS UP_MENU_NM
                          , TUSM.ORD_SEQ
                          , TUSM.MENU_URL
                          , TUSM.MENU_DSC
                          , LEVEL
                          , PATH
                          , AUTH_ID
                       FROM TEMP_T_USER_SYS_MENU TUSM
                            LEFT JOIN T_USER_SYS_MENU USM2
                                ON TUSM.UP_MENU_ID = USM2.MENU_ID
                      ORDER BY PATH
    </select>

</mapper>