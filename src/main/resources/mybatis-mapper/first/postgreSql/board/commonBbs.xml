<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdp.ap.app.board.mapper.CommonBbsMapper">

    <sql id="where">
		<where>
            <if test="searchValue != ''">
                <bind
                        name="searchValue"
                        value='@com.bdp.ap.common.EscapeHelper@escape(searchValue)'
                />
            </if>
			<if test="searchKey != '' and searchKey == 'ALL' and searchValue != ''">
				AND (UPPER(sj) LIKE CONCAT('%',UPPER(#{searchValue}),'%') OR UPPER(cn) LIKE CONCAT('%',UPPER(#{searchValue}),'%'))
			</if>
			<if test="searchKey != '' and searchKey == 'sj' and searchValue != ''">
				AND UPPER(sj) LIKE CONCAT('%',UPPER(#{searchValue}),'%')
			</if>
			<if test="searchKey != '' and searchKey == 'cn' and searchValue != ''">
				AND UPPER(cn) LIKE CONCAT('%',UPPER(#{searchValue}),'%')
			</if>
            AND DEL_YN = 'N'		
		</where>
	</sql>

    <sql id="order">
        order by rgst_dt DESC
    </sql>

    <select id="selectBbsList" resultType="commonBbsModel" parameterType="commonBbsModel">
		SELECT 
              TSB.ID                    AS ID
            , TSB.SJ                    AS SJ
            , TSB.CN                    AS CN
            , TSB.VIEW_CNT              AS VIEW_CNT
            <!-- , TSB.START_DT              AS START_DT -->
            <!-- , TSB.END_DT                AS END_DT -->
            , TSB.RGST_DEPT_CD          AS RGST_DEPT_CD
            , (SELECT DEPT_NM FROM T_DEPT TD WHERE TD.DEPT_CODE = TSB.RGST_DEPT_CD) AS RGST_DEPT_NM
            , TSB.WK_RGST_ID            AS WK_RGST_ID
            , (SELECT USER_NM FROM T_USER TU WHERE TU.USER_ID = TSB.WK_RGST_ID) AS WK_RGST_NM
            , TSB.WK_DT                 AS WK_DT
            , TSB."content"             AS "content"
            , TSB.FILE_ID               AS FILE_ID
            , TSB.RL_RPT_ID             AS RL_RPT_ID
            , TSB.RL_STD_COEFFT_ID      AS RL_STD_COEFFT_ID
            , TSB.RL_ANLZ_MRT_ID        AS RL_ANLZ_MRT_ID
            , TSB.RL_VIEW_ID            AS RL_VIEW_ID
            , TSB.RL_URL                AS RL_URL
            , TSB.DEL_YN                AS DEL_YN
            , TSB.RGST_DT               AS RGST_DT
            , TSB.RGST_ID               AS RGST_ID
            , TSB.MODI_DT               AS MODI_DT
            , TSB.MODI_ID               AS MODI_ID
        FROM 
            T_${boardId}_BBS TSB
        <include refid="where" />
        <include refid="order" />
        <include refid="paging.pagingOffsetSQL" />
    </select>

    <select id="selectBbsReplyList" resultType="commonBbsModel" parameterType="commonBbsModel">
        WITH RECURSIVE R AS (
            SELECT 
                TSB.ID, TSB.BF_ID, TSB.SJ, TSB.CN, TSB.VIEW_CNT, TSB.RGST_DEPT_CD, TSB.WK_RGST_ID, TSB.WK_DT, TSB."content", TSB.FILE_ID, TSB.RL_RPT_ID, TSB.RL_STD_COEFFT_ID, TSB.RL_ANLZ_MRT_ID, TSB.RL_VIEW_ID, TSB.RL_URL, TSB.DEL_YN, TSB.RGST_DT, TSB.RGST_ID, TSB.MODI_DT, TSB.MODI_ID
                , (SELECT DEPT_NM FROM T_DEPT TD WHERE TD.DEPT_CODE = TSB.RGST_DEPT_CD) AS RGST_DEPT_NM
                , (SELECT USER_NM FROM T_USER TU WHERE TU.USER_ID = TSB.WK_RGST_ID) AS WK_RGST_NM
                <!-- , TSB.START_DT, TSB.END_DT -->
                , 0 AS LV
                , array[(row_number() over(order by TSB.rgst_dt DESC))::TEXT] as ord_seq
            FROM 
                T_${boardId}_BBS TSB
            WHERE NULLIF(TSB.BF_ID,'') IS NULL AND TSB.DEL_YN = 'N'
            UNION ALL
            SELECT 
                TSB.ID, TSB.BF_ID, TSB.SJ, TSB.CN, TSB.VIEW_CNT, TSB.RGST_DEPT_CD, TSB.WK_RGST_ID, TSB.WK_DT, TSB."content", TSB.FILE_ID, TSB.RL_RPT_ID, TSB.RL_STD_COEFFT_ID, TSB.RL_ANLZ_MRT_ID, TSB.RL_VIEW_ID, TSB.RL_URL, TSB.DEL_YN, TSB.RGST_DT, TSB.RGST_ID, TSB.MODI_DT, TSB.MODI_ID
                , (SELECT DEPT_NM FROM T_DEPT TD WHERE TD.DEPT_CODE = TSB.RGST_DEPT_CD) AS RGST_DEPT_NM
                , (SELECT USER_NM FROM T_USER TU WHERE TU.USER_ID = TSB.WK_RGST_ID) AS WK_RGST_NM
                <!-- , TSB.START_DT, TSB.END_DT -->
                , R.LV + 1 AS LV
                , ARRAY_APPEND(R.ord_seq,(row_number() over(order by TSB.rgst_dt ASC))::TEXT) AS ord_seq 
            FROM R
            JOIN T_${boardId}_BBS TSB ON R.ID = TSB.BF_ID AND TSB.DEL_YN = 'N'
        ) SELECT	
            id, bf_id, sj, cn, view_cnt, rgst_dept_cd, wk_rgst_id, wk_dt, "content", file_id, rl_rpt_id, rl_std_coefft_id, rl_anlz_mrt_id, rl_view_id, rl_url, del_yn, rgst_dt, rgst_id, modi_dt, modi_id
            , RGST_DEPT_NM, WK_RGST_NM
            <!-- , START_DT, END_DT -->
            , LV
            ,ord_seq
        FROM R
        <include refid="where" />
        order by ord_seq
        <include refid="paging.pagingOffsetSQL" />
    </select>

    <select id="selectBbsListCount" resultType="int" parameterType="commonBbsModel">
		SELECT
			COUNT(*)
		FROM        
			T_${boardId}_BBS TSB
		<include refid="where" />
	</select>

    <select id="selectBbsMng" resultType="commonBbsMngModel" parameterType="commonBbsModel">
        SELECT 
              BOARD_ID              AS BOARD_ID
            , BOARD_NM              AS BOARD_NM
            , TYP_CD                AS TYP_CD
            , DESCRIPTION           AS DESCRIPTION
            , URL_ADDR              AS URL_ADDR
            , WK_TEMPLATE           AS WK_TEMPLATE
            , USE_YN                AS USE_YN
            , KIND_USE_YN           AS KIND_USE_YN
            , FIND_AUTH_YN          AS FIND_AUTH_YN
            , WK_AUTH_YN            AS WK_AUTH_YN
            , MNG_AUTH_YN           AS MNG_AUTH_YN
            , COMPANY_CODE          AS COMPANY_CODE
            , DEL_YN                AS DEL_YN
            , RGST_DT               AS RGST_DT
            , RGST_ID               AS RGST_ID
            , MODI_DT               AS MODI_DT
            , MODI_ID               AS MODI_ID
        FROM
            T_BOARD_MNG TBM 
        WHERE 
            TBM.BOARD_ID = #{boardId}
    </select> 

    <select id="selectBbsItemList" resultType="commonBbsItemModel" parameterType="commonBbsModel">
        SELECT 
              TBIM.BOARD_ITEM_ID        AS BOARD_ITEM_ID
            , TBI.ITEM_NM               AS ITEM_NM
            , TBI.ITEM_PHY_NM           AS ITEM_PHY_NM
            , TBIM.BOARD_ID             AS BOARD_ID
            , TBIM.ITEM_USE_YN          AS ITEM_USE_YN
            , TBIM.ITEM_MARK_YN         AS ITEM_MARK_YN
            , TBIM.ITEM_ESS_YN          AS ITEM_ESS_YN
            , TBIM.DEL_YN               AS DEL_YN
            , TBIM.RGST_DT              AS RGST_DT
            , TBIM.RGST_ID              AS RGST_ID
            , TBIM.MODI_DT              AS MODI_DT
            , TBIM.MODI_ID              AS MODI_ID
        FROM
            T_BOARD_ITEM_MAPP TBIM
            INNER JOIN T_BOARD_ITEM TBI
            ON TBIM.BOARD_ITEM_ID = TBI.BOARD_ITEM_ID
        WHERE 
            TBIM.BOARD_ID = #{boardId}
            AND TBIM.ITEM_USE_YN = 'Y'
            <if test="viewType == 'list'">
                AND TBIM.ITEM_MARK_YN = 'Y'
            </if>
            AND TBI.DEL_YN = 'N'
        ORDER BY TBIM.BOARD_ITEM_ID ASC
    </select>

    <select id="selectBbs" resultType="commonBbsModel" parameterType="commonBbsModel">
        SELECT 
              TSB.ID                    AS ID
            , TSB.SJ                    AS SJ
            , TSB.CN                    AS CN
            , TSB.VIEW_CNT              AS VIEW_CNT
            <!-- , TSB.START_DT              AS START_DT -->
            <!-- , TSB.END_DT                AS END_DT -->
            , TSB.RGST_DEPT_CD          AS RGST_DEPT_CD
            , (SELECT DEPT_NM FROM T_DEPT TD WHERE TD.DEPT_CODE = TSB.RGST_DEPT_CD) AS RGST_DEPT_NM
            , TSB.WK_RGST_ID            AS WK_RGST_ID
            , (SELECT USER_NM FROM T_USER TU WHERE TU.USER_ID = TSB.WK_RGST_ID) AS WK_RGST_NM
            , TSB.WK_DT                 AS WK_DT
            , TSB.CONTENT             	AS CONTENT
            , TSB.FILE_ID               AS FILE_ID
            , TSB.RL_RPT_ID             AS RL_RPT_ID
            , TSB.RL_STD_COEFFT_ID      AS RL_STD_COEFFT_ID
            , TSB.RL_ANLZ_MRT_ID        AS RL_ANLZ_MRT_ID
            , TSB.RL_VIEW_ID            AS RL_VIEW_ID
            , TSB.RL_URL                AS RL_URL
            , TSB.DEL_YN                AS DEL_YN
            , TSB.RGST_DT               AS RGST_DT
            , TSB.RGST_ID               AS RGST_ID
            , TSB.MODI_DT               AS MODI_DT
            , TSB.MODI_ID               AS MODI_ID
        FROM 
            T_${boardId}_BBS TSB
        WHERE
            TSB.ID = #{id}
            AND TSB.DEL_YN = 'N'
    </select>

    <insert id="insertBbs" parameterType="commonBbsModel">
        INSERT INTO 
            t_${boardId}_bbs(
                  ID
                <if test="bfId != '' and bfId != null">
                    , BF_ID
                </if>
                , SJ
                , CN
                , VIEW_CNT
                <!-- , START_DT
                , END_DT -->
                , RGST_DEPT_CD
                , WK_RGST_ID
                , WK_DT
                , "content"
                , FILE_ID
                , RL_RPT_ID
                , RL_STD_COEFFT_ID
                , RL_ANLZ_MRT_ID
                , RL_VIEW_ID
                , RL_URL
                , DEL_YN
                , RGST_DT
                , RGST_ID
                , MODI_DT
                , MODI_ID
            )
            VALUES(
                (select nextval('anlz_cmt_seq'))
                <if test="bfId != '' and bfId != null">
                    , #{bfId}
                </if>
                , #{sj}
                , #{cn}
                , 0
                <!-- , #{startDt}
                , #{endDt} -->
                , #{rgstDeptCd}
                , #{wkRgstId}
                , now()
                , #{content}
                , #{fileId}
                , #{rlRptId}
                , #{rlStdCoefftId}
                , #{rlAnlzMrtId}
                , #{rlViewId}
                , #{rlUrl}
                , #{delYn}
                , now()
                , #{rgstId}
                , now()
                , #{modiId}
            )
    </insert>

    <update id="updateBbs" parameterType="commonBbsModel">
        UPDATE
            t_${boardId}_bbs
        SET
              SJ                    = #{sj}
            , CN                    = #{cn}
            <!-- , START_DT              = #{startDt}
            , END_DT                = #{endDt} -->
            , FILE_ID               = #{fileId}
            , RL_RPT_ID             = #{rlRptId}
            , RL_STD_COEFFT_ID      = #{rlStdCoefftId}
            , RL_ANLZ_MRT_ID        = #{rlAnlzMrtId}
            , RL_VIEW_ID            = #{rlViewId}
            , RL_URL                = #{rlUrl}
            , MODI_DT               = now()
            , MODI_ID               = #{modiId}
        WHERE
            ID = #{id}
    </update>
	
    <update id="deleteBbs" parameterType="commonBbsModel">
        UPDATE
            t_${boardId}_bbs
        SET
              DEL_YN  = #{delYn}
            , MODI_ID = #{modiId}
            , MODI_DT = now()
        WHERE
            ID = #{id}
    </update>

    <update id="addViewCntBbs" parameterType="commonBbsModel"> 
        UPDATE
            t_${boardId}_bbs
        SET
            VIEW_CNT = (COALESCE(VIEW_CNT, 0) + 1)
        WHERE
            ID = #{id}
    </update>

    <select id="authChecker" resultType="int" parameterType="commonBbsModel">
        select 
            COUNT(*)
        from
            t_board_auth tba 
        where
            tba.board_id = #{boardId}
            and (tba.auth_div_cd ='02' or tba.auth_div_cd ='03')
            and (board_auth_id = #{mgrAuthId} or board_auth_id = #{authId})
    </select>

    <insert id="insertBbsComment" parameterType="commentModel">
        INSERT INTO 
            t_${boardId}_bbs_comment(
                  COMMENT_ID
                <if test="bfCommentId != '' and bfCommentId != null">
                    , BF_COMMENT_ID
                </if>
                , CN
                , REF_ID
                , DEL_YN
                , RGST_DT
                , RGST_ID
                , MODI_DT
                , MODI_ID
            )
            VALUES(
                (select nextval('bbs_comment_cmt_seq'))
                <if test="bfCommentId != '' and bfCommentId != null">
                    , #{bfCommentId}
                </if>
                , #{cn}
                , #{refId}
                , #{delYn}
                , now()
                , #{rgstId}
                , now()
                , #{modiId}
            )
    </insert>
    
	<update id="updateBbsComment" parameterType="commentModel">
        UPDATE
            ptl.t_${boardId}_bbs_comment
        SET
            cn = #{cn},
            modi_id = #{modiId},
            modi_dt = now()
       WHERE
            comment_id = #{commentId}
	</update>
    
    <update id="deleteBbsComment" parameterType="commentModel">
        UPDATE
            ptl.t_${boardId}_bbs_comment
        SET
            DEL_YN = 'Y',
            modi_id = #{modiId},
            modi_dt = now()
       WHERE
            comment_id = #{commentId}
    </update>

	<select id="selectBbsCommentList" resultType="commentModel" parameterType="commonBbsModel">
		WITH RECURSIVE R AS (
		    select a.comment_id
		            ,a.bf_comment_id
		            ,a.cn
		            ,a.ref_id
		            ,a.del_yn
		            ,a.rgst_dt
		            ,a.rgst_id
		            ,a.modi_dt
		            ,a.modi_id
		           ,b.user_nm as rgst_nm 
				   ,(select dept_nm from t_dept where dept_code = b.dept_code) as rgst_dept_nm
		           , 0 AS lv
			FROM t_${boardId}_bbs_comment a
			left outer join t_user b 
			on a.rgst_id = b.user_id
			where  a.ref_id = #{id}
            and coalesce(a.DEL_YN,'N') = 'N'
            and a.bf_comment_id is null
			union 
			select a.comment_id
		            ,a.bf_comment_id
		            ,a.cn
		            ,a.ref_id
		            ,a.del_yn
		            ,a.rgst_dt
		            ,a.rgst_id
		            ,a.modi_dt
		            ,a.modi_id
		           ,b.user_nm as rgst_nm 
				   ,(select dept_nm from t_dept where dept_code = b.dept_code) as rgst_dept_nm
		           , R.lv + 1 AS lv
			FROM R
			join t_${boardId}_bbs_comment a
			on R.comment_id = a.bf_comment_id 
			left outer join t_user b 
			on a.rgst_id = b.user_id
			where  coalesce(a.DEL_YN,'N') = 'N'
		)
		select comment_id
		            ,bf_comment_id
		            ,cn
		            ,ref_id
		            ,del_yn
		            ,rgst_dt
		            ,rgst_id
		            ,modi_dt
		            ,modi_id
		           ,rgst_nm 
				   ,rgst_dept_nm
		           ,lv
		from R
		order by rgst_dt
	</select>

</mapper>