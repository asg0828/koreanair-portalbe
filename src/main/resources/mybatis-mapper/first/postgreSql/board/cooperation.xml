<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdp.ap.app.board.mapper.CooperationMapper">
    <sql id="order">
        ORDER BY z.rownum ASC
    </sql> 	
    
    <select id="selectCooperationList" resultType="cooperationModel" parameterType="cooperationCriteria">
    	select
			*
		from (
		    select 
		       row_number() over (order by a.rgst_dt desc) as rownum
		       ,a.del_yn 
		       ,a.collab_spc_id 
		       ,a.grp_cd 
		       ,cd1.code_nm  as grp_nm
		       ,a.collab_nm
		      ,a.collab_initor
		      ,cd2.user_nm as collab_initor_nm
		      ,a.collab_tgt
		      ,a.crt_dt      
		      ,a.st_cd
		      ,cd3.code_nm  as st_nm
		      ,(select array_to_string(array_agg(b.user_nm), ',') 
			       from ptl.t_collab_spc_pcpt a1
			         ,t_user b
			       where a1.pcpt_id = b.user_id
			        and a1.collab_spc_id= a.collab_spc_id
					and a1.del_yn = 'N' 
		       ) as pcpt_nm
			from t_collab_spc_m a
			    left outer join t_code cd1 
			    on cd1.group_id = 'GRP_CD'  				/*그룹사코드*/
			    and cd1.code_id= a.grp_cd
			    left outer join t_user cd2
			    on cd2.user_id = a.collab_initor
			    left outer join t_code cd3
			    on cd3.group_id ='ST_CD'                       /*상태코드*/  
			    and cd3.code_id= a.st_cd
			where 1=1
			and coalesce(a.del_yn,'N') = 'N'
			<if test="regStDt != null and regStDt != ''">
				and TO_DATE(a.crt_dt,'YYYYMMDD') >= TO_DATE(#{regStDt},'YYYYMMDD')
			</if>
			<if test="regEdDt != null and regEdDt != ''">
				and TO_DATE(#{regEdDt},'YYYYMMDD') >= TO_DATE(a.crt_dt,'YYYYMMDD')
			</if>    
			<if test="collabInitor != null and collabInitor != ''">
				<bind
						name="collabInitor"
						value='@com.bdp.ap.common.EscapeHelper@escape(collabInitor)'
				/>
				and a.collab_initor LIKE CONCAT(#{collabInitor},'%')
			</if>
			<if test="grpCd != null and grpCd != ''">
				and a.grp_cd =#{grpCd}
			</if>
			<if test="stCd != null and stCd != ''">
				and a.st_cd =#{stCd}
			</if>
			<if test="collabNm != null and collabNm != ''">
				<bind
						name="collabNm"
						value='@com.bdp.ap.common.EscapeHelper@escape(collabNm)'
				/>
				and UPPER(a.collab_nm) LIKE CONCAT('%',UPPER(#{collabNm}),'%')
			</if>
			<if test="collabTgt != null and collabTgt != ''">
				<bind
						name="collabTgt"
						value='@com.bdp.ap.common.EscapeHelper@escape(collabTgt)'
				/>
				and UPPER(a.collab_tgt) LIKE CONCAT('%',UPPER(#{collabTgt}),'%')
			</if>
		  ) z  	  
		<include refid="order" />    
    	<include refid="paging.pagingOffsetSQL" />
    </select>
    
    <select id="selectCooperationListCount" resultType="int" parameterType="cooperationCriteria">    
		    select 
		      count(*)
			from ptl.t_collab_spc_m a
			    left outer join t_code cd1 
			    on cd1.group_id = 'GRP_CD'  				/*그룹사코드*/
			    and cd1.code_id= a.grp_cd
			    left outer join t_user cd2
			    on cd2.user_id = a.collab_initor
			    left outer join t_code cd3
			    on cd3.group_id ='ST_CD'                       /*상태코드*/  
			    and cd3.code_id= a.st_cd
			where 1=1
			and coalesce(a.del_yn,'N') = 'N'
			<if test="regStDt != null and regStDt != ''">
				and TO_DATE(a.crt_dt,'YYYYMMDD') >= TO_DATE(#{regStDt},'YYYYMMDD')
			</if>
			<if test="regEdDt != null and regEdDt != ''">
				and TO_DATE(#{regEdDt},'YYYYMMDD') >= TO_DATE(a.crt_dt,'YYYYMMDD')
			</if>       
			<if test="collabInitor != null and collabInitor != ''">
				and a.collab_initor LIKE CONCAT(#{collabInitor},'%')
			</if>
			<if test="grpCd != null and grpCd != ''">
				and a.grp_cd =#{grpCd}
			</if>
			<if test="stCd != null and stCd != ''">
				and a.st_cd =#{stCd}
			</if>
			<if test="collabNm != null and collabNm != ''">
				<bind
						name="collabNm"
						value='@com.bdp.ap.common.EscapeHelper@escape(collabNm)'
				/>
				and UPPER(a.collab_nm) LIKE CONCAT('%',UPPER(#{collabNm}),'%')
			</if>
			<if test="collabTgt != null and collabTgt != ''">
				<bind
						name="collabTgt"
						value='@com.bdp.ap.common.EscapeHelper@escape(collabTgt)'
				/>
				and UPPER(a.collab_tgt) LIKE CONCAT('%',UPPER(#{collabTgt}),'%')
			</if>
		  
    </select>
    
    
    <select id="selectCooperationDetail" resultType="cooperationModel" parameterType="cooperationCriteria">
    	select a.crt_dt
			        ,a.collab_initor
			        ,cd2.user_nm as collab_initor_nm
			        ,a.grp_cd
			        ,cd1.code_nm  as grp_nm
			        ,a.st_cd
			        ,cd3.code_nm  as st_nm
			        ,( select  array_to_string(array_agg(s2.user_nm order by s1.pcpt_id) , ',') 
								  from ptl.t_collab_spc_pcpt s1
								         ,t_user s2
								  where s1.pcpt_id = s2.user_id       
								  and coalesce(s1.del_yn,'N') = 'N'
								  and s1.collab_spc_id = a.collab_spc_id
			         ) as picr_nm
			        ,( select  array_to_string(array_agg(s1.pcpt_id order by s1.pcpt_id), ',') 
								  from ptl.t_collab_spc_pcpt s1
								         ,t_user s2
								  where s1.pcpt_id = s2.user_id       
								  and coalesce(s1.del_yn,'N') = 'N'
								  and s1.collab_spc_id = a.collab_spc_id
			         ) as picr_id  
			        ,a.collab_nm
			        ,a.collab_tgt
			        ,a.collab_spc_dtl_desc
			from t_collab_spc_m a
			  left outer join t_code cd1 
			    on cd1.group_id = 'GRP_CD'  
			    and cd1.code_id= a.grp_cd
			    left outer join t_user cd2
			    on cd2.user_id = a.collab_initor
			    left outer join t_code cd3
			    on cd3.group_id ='ST_CD'     
			    and cd3.code_id= a.st_cd
			where coalesce(a.del_yn,'N') = 'N'
			and a.collab_spc_id = #{collabSpcId}
    </select>
    
    <select id="selectCooperationTaskDetail" resultType="cooperationModel" parameterType="cooperationCriteria">
    	select b.collab_spc_tsk_id
					,b.collab_spc_id
					,b.collab_spc_tsk_nm
					,b.sj
					,b.wrk_knd_cd
					,cd1.code_nm  as wrkKndNm
					,b.wrk_trm_dt
					,b.picr_id
					,cd2.user_nm as picr_nm
					,b.dept_cd
					,c.dept_nm 
					,b.company_cd
					,b.cntn
					,b.antate
					,b.rgst_Id
					,(select array_to_string(array_agg(s1.file_nm), ',')
										from  t_file s1
										where s1.ref_id = b.collab_spc_tsk_id 
										and s1.use_yn='Y') as file_nm		
					,(select array_to_string(array_agg(s1.file_id), ',')
										from  t_file s1
										where s1.ref_id = b.collab_spc_tsk_id 
										and s1.use_yn='Y') as file_id							
			from t_collab_spc_m a
			inner join t_collab_spc_task b
			on a.collab_spc_id = b.collab_spc_id 
			and coalesce(b.del_yn,'N') = 'N'
			left outer join t_dept c
			on b.dept_cd = c.dept_code
			left outer join t_code cd1 
			    on cd1.group_id = 'WRK_KND_CD'   
			    and cd1.code_id= b.wrk_knd_cd
			left outer join t_user cd2
			    on cd2.user_id = b.picr_id    
			where coalesce(a.del_yn,'N') = 'N'			
			and b.collab_spc_id =  #{collabSpcId}
			<if test="collabSpcTskId != null and collabSpcTskId != ''">
				and b.collab_spc_tsk_id = #{collabSpcTskId}
			</if>
			order by b.collab_spc_tsk_id
    </select>
    
    <select id="selectCooperationCommentDetail" resultType="cooperationModel" parameterType="cooperationCriteria">
    	WITH RECURSIVE r AS (
			select c.comt_id
					,c.collab_spc_tsk_id
					,c.comt_nm
					,c.up_comt_id
					,c.dept_cd
					,d.dept_nm 
					,c.rgst_id
					,cd1.user_nm as rgst_nm
					, 0 AS lv
					,a.collab_spc_id  
					,c.rgst_dt
			from t_collab_spc_m a
			inner join t_collab_spc_task b
			on a.collab_spc_id = b.collab_spc_id 
			and coalesce(b.del_yn,'N') = 'N'
			inner join t_collab_spc_comt c
			on b.collab_spc_tsk_id = c.collab_spc_tsk_id 
			and coalesce(c.del_yn,'N') = 'N'
			left outer join t_dept d
			on c.dept_cd = d.dept_code
			left outer join t_user cd1
			 on cd1.user_id = c.rgst_id    
			where nullif(c.up_comt_id,'') IS null
			and coalesce(a.del_yn,'N') = 'N' 
			and a.collab_spc_id =#{collabSpcId}
			and b.collab_spc_tsk_id =#{collabSpcTskId}
			union all 
			select c.comt_id
					,c.collab_spc_tsk_id
					,c.comt_nm
					,c.up_comt_id
					,c.dept_cd
					,d.dept_nm 
					,c.rgst_id
					,cd1.user_nm as rgst_nm
					, r.lv + 1 as lv
					,r.collab_spc_id 
					,c.rgst_dt
			from r
			 join t_collab_spc_comt c 
			 on  r.comt_id = c.up_comt_id
			 and coalesce(c.del_yn,'N') = 'N'
			 left outer join t_dept d
			on c.dept_cd = d.dept_code
			left outer join t_user cd1
			 on cd1.user_id = c.rgst_id    
			)select r.comt_id
					,r.comt_nm
					,r.up_comt_id
					,r.dept_cd
					,r.dept_nm 
					,r.rgst_id
					,r.rgst_nm
					,r.collab_spc_id
					,r.collab_spc_tsk_id
					,r.lv
					,r.rgst_dt
			from r		
			order by r.comt_id,r.lv
    </select>
    
    
    <select id="selectCooperationComtDt" parameterType="cooperationModel" resultType="cooperationModel" >
    	select rgst_dt
    	 from t_collab_spc_comt
    	 where comt_id =#{comtId}
    	 and collab_spc_tsk_id =#{collabSpcTskId}
    </select>
    
<!--     <insert id="insertCooperationMaster" parameterType="cooperationModel">
    	insert into t_collab_spc_m(
			collab_spc_id
			,grp_cd
			,collab_nm
			,collab_initor
			,crt_dt
			,collab_tgt
			,collab_spc_dtl_desc
			,st_cd
			,del_yn
			,rgst_dt
			,rgst_id
			,modi_dt
			,modi_id
		)values(
			#{collabSpcId}
			,#{grpCd}
			,#{collabNm}
			,#{collabInitor}
			,#{crtDt}
			,#{collabTgt}
			,#{collabSpcDtlDesc}
			,#{stCd}
			,#{delYn}
			,now()
			,#{rgstId}
			,now()
			,#{modiId}
		)
    </insert>
    
	-->
    
    <insert id="insertCooperationPcpt" parameterType="cooperationModel">
    	insert into t_collab_spc_pcpt(
			pcpt_id
			,collab_spc_id
			,del_yn
			,rgst_dt
			,rgst_id
			,modi_dt
			,modi_id
		)values(
		   #{pcptId}
		   ,#{collabSpcId}
		   ,#{delYn}
			,now()
			,#{rgstId}
			,now()
			,#{modiId}
		)
    </insert>
    
    <insert id="insertCooperationTask" parameterType="cooperationModel">
    	insert into t_collab_spc_task(
			collab_spc_tsk_id
			,collab_spc_id
			,collab_spc_tsk_nm
			,sj
			,wrk_knd_cd
			,picr_id
			,dept_cd
			,wrk_trm_dt
			,cntn
			,antate
			,del_yn
			,rgst_dt
			,rgst_id
			,modi_dt
			,modi_id
		)values(
			#{collabSpcTskId}
			,#{collabSpcId}
			,#{collabSpcTskNm}
			,#{sj}
			,#{wrkKndCd}
			,#{picrId}
			,#{deptCd}
			,#{wrkTrmDt}
			,#{cntn}
			,#{antate}
			,#{delYn}
			,now()
			,#{rgstId}
			,now()
			,#{modiId}
		)
    </insert>
   
    <insert id="insertCooperationComt" parameterType="cooperationModel">
    	insert into t_collab_spc_comt(
			comt_id
			,collab_spc_tsk_id
			,comt_nm
			,up_comt_id
			,dept_cd
			,del_yn
			,rgst_dt
			,rgst_id
			,modi_dt
			,modi_id
		)values(
		  #{comtId}
		  ,#{collabSpcTskId}
		  ,#{comtNm}
		  ,#{upComtId}
		  ,#{deptCd}
		  ,#{delYn}
		  ,now()
		  ,#{rgstId}
		  ,now()
		  ,#{modiId}
		)
    </insert>

    <insert id="upsertCooperationPcpt" parameterType="cooperationModel">
    	with upsert as (
    		update t_collab_spc_pcpt set del_yn = #{delYn}
    	    ,modi_dt = now()
			,modi_id = #{modiId}
		where collab_spc_id = #{collabSpcId}
		 and pcpt_id = #{pcptId}
			returning *
    	)
    	insert into t_collab_spc_pcpt(
			pcpt_id
			,collab_spc_id
			,del_yn
			,rgst_dt
			,rgst_id
			,modi_dt
			,modi_id
		)select
		   #{pcptId}
		   ,#{collabSpcId}
		   ,#{delYn}
			,now()
			,#{rgstId}
			,now()
			,#{modiId} 
		where not exists (select * from upsert)
    </insert>

    
    <update id="updateCooperationMaster" parameterType="cooperationModel">
    	update t_collab_spc_m set grp_cd = #{grpCd}			
			,collab_nm = #{collabNm}
			,collab_initor = #{collabInitor}
			,crt_dt = #{crtDt}
			,collab_tgt = #{collabTgt}
			,collab_spc_dtl_desc = #{collabSpcDtlDesc}
			,st_cd = #{stCd}
			,modi_dt = now()
			,modi_id = #{modiId}
		where collab_spc_id = #{collabSpcId} 
    </update>
    
    <update id="deleteCooperationPcpt" parameterType="cooperationModel">
    	update t_collab_spc_pcpt set del_yn = #{delYn}
    	    ,modi_dt = now()
			,modi_id = #{modiId}
		where collab_spc_id = #{collabSpcId}
    </update>
     
    <update id="updateCooperationTask" parameterType="cooperationModel">
    	update t_collab_spc_task set collab_spc_tsk_nm =#{collabSpcTskNm} 
			,sj = #{sj}
			,wrk_knd_cd = #{wrkKndCd}
			,picr_id = #{picrId}
			,dept_cd = #{deptCd}
			,wrk_trm_dt = #{wrkTrmDt}
			,cntn = #{cntn}
			,antate = #{antate}
			,modi_dt = now()
			,modi_id = #{modiId}
		where collab_spc_tsk_id =#{collabSpcTskId}
		and collab_spc_id = #{collabSpcId}
    </update>
 
    <update id="updateCooperationComt" parameterType="cooperationModel">
    	update t_collab_spc_comt set comt_nm = #{comtNm}
			,up_comt_id =#{upComtId} 
			,dept_cd = #{deptCd}
			,modi_dt = now()
			,modi_id = #{modiId}
		where comt_id = #{comtId} 
		and collab_spc_tsk_id = #{collabSpcTskId} 
    </update>
  
    <update id="deleteCooperationMaster" parameterType="cooperationModel">
    	update t_collab_spc_m set del_yn = #{delYn}
			,modi_dt = now()
			,modi_id = #{modiId}
		where collab_spc_id = #{collabSpcId} 
    </update>
    
    <update id="deleteCooperationTask" parameterType="cooperationModel">
    	update t_collab_spc_task set del_yn = #{delYn}
			,modi_dt = now()
			,modi_id = #{modiId}
		where collab_spc_tsk_id =#{collabSpcTskId}
		and collab_spc_id = #{collabSpcId}
    </update>
  
    <update id="deleteCooperationComt" parameterType="cooperationModel">
    	update t_collab_spc_comt set del_yn = #{delYn}
			,modi_dt = now()
			,modi_id = #{modiId}
		where  collab_spc_tsk_id = #{collabSpcTskId}
		<if test="comtId != null and comtId != ''">
			and comt_id = #{comtId} 
		</if>
    </update> 
    
</mapper>        